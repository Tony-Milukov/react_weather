{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tony\\\\Documents\\\\GitHub\\\\react_weather\\\\my-app\\\\src\\\\components\\\\WeekContainer\\\\WeekContainer.js\";\nimport React from 'react';\nimport Card from '../Card/Card';\nimport { avaibleCities } from \"../../availableCities/avaibleCities\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultCity = \"Klagenfurt\";\n\nclass WeekContainer extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      days: [],\n      city: defaultCity,\n      weatherURL: `https://api.openweathermap.org/data/2.5/forecast?q=${defaultCity}&lang=en&units=metric&APPID=79cce12f32339641751ec2b2c1ccfc2f`,\n      isChoosed: false\n    };\n\n    this.componentDidMount = i => {\n      fetch(i ? i : this.state.weatherURL).then(res => res.json()).then(data => {\n        const dailyData = data.list.filter(reading => reading.dt_txt.includes(\"12:00:00\"));\n        this.setState({\n          days: dailyData\n        });\n      });\n    };\n\n    this.formatCards = () => {\n      return this.state.days.map((day, index) => /*#__PURE__*/_jsxDEV(Card, {\n        day: day\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 48\n      }, this));\n    };\n\n    this.inputstate = e => {\n      let weatherURL = `https://api.openweathermap.org/data/2.5/forecast?q=${e.target.value}&lang=en&units=metric&APPID=79cce12f32339641751ec2b2c1ccfc2f`;\n      console.log(e.target.value);\n      this.setState({ ...this.state,\n        city: e.target.value,\n        weatherURL: weatherURL\n      });\n      this.setState({ ...this.state,\n        isChoosed: true\n      });\n      this.componentDidMount(weatherURL);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"display-4 jumbotron\",\n        children: \"Weather forecast for 5 days\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"cityInput\",\n        onChange: this.inputstate,\n        onSelect: this.inputstate,\n        children: [!this.state.isChoosed ? /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Choose your City  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 36\n        }, this) : null, avaibleCities.map(i => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: i.city,\n          children: [i.name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 35\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), this.state.isChoosed ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row justify-content-center\",\n          children: this.formatCards()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default WeekContainer;","map":{"version":3,"names":["React","Card","avaibleCities","defaultCity","WeekContainer","Component","state","days","city","weatherURL","isChoosed","componentDidMount","i","fetch","then","res","json","data","dailyData","list","filter","reading","dt_txt","includes","setState","formatCards","map","day","index","inputstate","e","target","value","console","log","render","name"],"sources":["C:/Users/Tony/Documents/GitHub/react_weather/my-app/src/components/WeekContainer/WeekContainer.js"],"sourcesContent":["import React from 'react';\nimport Card from '../Card/Card';\nimport {avaibleCities} from \"../../availableCities/avaibleCities\";\n\nconst defaultCity = \"Klagenfurt\"\nclass WeekContainer extends React.Component {\n  state = {\n    days: [],\n    city: defaultCity,\n    weatherURL: `https://api.openweathermap.org/data/2.5/forecast?q=${defaultCity}&lang=en&units=metric&APPID=79cce12f32339641751ec2b2c1ccfc2f`,\n    isChoosed: false,\n  }\n\n  componentDidMount = (i) => {\n    fetch(i ? i : this.state.weatherURL)\n    .then(res => res.json())\n\n    .then(data => {\n      const dailyData = data.list.filter(reading => reading.dt_txt.includes(\"12:00:00\"))\n      this.setState({days: dailyData})\n    })\n  }\n\n  formatCards = () => {\n    return this.state.days.map((day, index) => <Card day={day} key={index}/>)\n  }\n  inputstate = (e) => {\n    let weatherURL  = `https://api.openweathermap.org/data/2.5/forecast?q=${e.target.value}&lang=en&units=metric&APPID=79cce12f32339641751ec2b2c1ccfc2f`\n    console.log(e.target.value)\n    this.setState({...this.state,city: e.target.value,\n      weatherURL: weatherURL\n    })\n        this.setState({\n          ...this.state,\n          isChoosed: true\n        })\n    this.componentDidMount(weatherURL)\n\n\n\n  }\n\n  render() {\n    return (\n      <div className=\"\">\n        <h1 className=\"display-4 jumbotron\">Weather forecast for 5 days</h1>\n        {/*<h1>{this.state.city === \"\" ? defaultCity : !this.state.error ? this.state.city : `There is no ${this.state.city} city`}</h1>*/}\n        {/*<input className={\"cityInput\"} onInput={this.inputstate} type=\"text\"/>*/}\n        <select className={\"cityInput\"} onChange={this.inputstate} onSelect={this.inputstate}>\n          {!this.state.isChoosed ? <option value=\"\">Choose your City  </option> : null}\n          {avaibleCities.map(i => <option value={i.city}>{i.name} </option>)}\n        </select>\n        {this.state.isChoosed ?  <>\n          <div className=\"row justify-content-center\">\n\n            {this.formatCards()}\n\n          </div></> : null}\n      </div>\n    )\n  }\n}\n\nexport default WeekContainer\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,SAAQC,aAAR,QAA4B,qCAA5B;;;AAEA,MAAMC,WAAW,GAAG,YAApB;;AACA,MAAMC,aAAN,SAA4BJ,KAAK,CAACK,SAAlC,CAA4C;EAAA;IAAA;IAAA,KAC1CC,KAD0C,GAClC;MACNC,IAAI,EAAE,EADA;MAENC,IAAI,EAAEL,WAFA;MAGNM,UAAU,EAAG,sDAAqDN,WAAY,8DAHxE;MAINO,SAAS,EAAE;IAJL,CADkC;;IAAA,KAQ1CC,iBAR0C,GAQrBC,CAAD,IAAO;MACzBC,KAAK,CAACD,CAAC,GAAGA,CAAH,GAAO,KAAKN,KAAL,CAAWG,UAApB,CAAL,CACCK,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAGCF,IAHD,CAGMG,IAAI,IAAI;QACZ,MAAMC,SAAS,GAAGD,IAAI,CAACE,IAAL,CAAUC,MAAV,CAAiBC,OAAO,IAAIA,OAAO,CAACC,MAAR,CAAeC,QAAf,CAAwB,UAAxB,CAA5B,CAAlB;QACA,KAAKC,QAAL,CAAc;UAACjB,IAAI,EAAEW;QAAP,CAAd;MACD,CAND;IAOD,CAhByC;;IAAA,KAkB1CO,WAlB0C,GAkB5B,MAAM;MAClB,OAAO,KAAKnB,KAAL,CAAWC,IAAX,CAAgBmB,GAAhB,CAAoB,CAACC,GAAD,EAAMC,KAAN,kBAAgB,QAAC,IAAD;QAAM,GAAG,EAAED;MAAX,GAAqBC,KAArB;QAAA;QAAA;QAAA;MAAA,QAApC,CAAP;IACD,CApByC;;IAAA,KAqB1CC,UArB0C,GAqB5BC,CAAD,IAAO;MAClB,IAAIrB,UAAU,GAAK,sDAAqDqB,CAAC,CAACC,MAAF,CAASC,KAAM,8DAAvF;MACAC,OAAO,CAACC,GAAR,CAAYJ,CAAC,CAACC,MAAF,CAASC,KAArB;MACA,KAAKR,QAAL,CAAc,EAAC,GAAG,KAAKlB,KAAT;QAAeE,IAAI,EAAEsB,CAAC,CAACC,MAAF,CAASC,KAA9B;QACZvB,UAAU,EAAEA;MADA,CAAd;MAGI,KAAKe,QAAL,CAAc,EACZ,GAAG,KAAKlB,KADI;QAEZI,SAAS,EAAE;MAFC,CAAd;MAIJ,KAAKC,iBAAL,CAAuBF,UAAvB;IAID,CAnCyC;EAAA;;EAqC1C0B,MAAM,GAAG;IACP,oBACE;MAAK,SAAS,EAAC,EAAf;MAAA,wBACE;QAAI,SAAS,EAAC,qBAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAIE;QAAQ,SAAS,EAAE,WAAnB;QAAgC,QAAQ,EAAE,KAAKN,UAA/C;QAA2D,QAAQ,EAAE,KAAKA,UAA1E;QAAA,WACG,CAAC,KAAKvB,KAAL,CAAWI,SAAZ,gBAAwB;UAAQ,KAAK,EAAC,EAAd;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAxB,GAAuE,IAD1E,EAEGR,aAAa,CAACwB,GAAd,CAAkBd,CAAC,iBAAI;UAAQ,KAAK,EAAEA,CAAC,CAACJ,IAAjB;UAAA,WAAwBI,CAAC,CAACwB,IAA1B;QAAA;UAAA;UAAA;UAAA;QAAA,QAAvB,CAFH;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF,EAQG,KAAK9B,KAAL,CAAWI,SAAX,gBAAwB;QAAA,uBACvB;UAAK,SAAS,EAAC,4BAAf;UAAA,UAEG,KAAKe,WAAL;QAFH;UAAA;UAAA;UAAA;QAAA;MADuB,iBAAxB,GAKa,IAbhB;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAiBD;;AAvDyC;;AA0D5C,eAAerB,aAAf"},"metadata":{},"sourceType":"module"}