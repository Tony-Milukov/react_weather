{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tony\\\\Documents\\\\GitHub\\\\react_weather\\\\my-app\\\\src\\\\components\\\\WeekContainer\\\\WeekContainer.js\";\nimport React from 'react';\nimport Card from '../Card/Card';\nimport { logDOM } from \"@testing-library/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass WeekContainer extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      days: [],\n      city: \"Klagenfurt\",\n      weatherURL: `https://api.openweathermap.org/data/2.5/forecast?q=Klagenfurt&lang=en&units=metric&APPID=79cce12f32339641751ec2b2c1ccfc2f`,\n      error: false\n    };\n\n    this.componentDidMount = i => {\n      fetch(i ? i : this.state.weatherURL).then(res => res.json()).then(data => {\n        data.cod === \"404\" ? this.setState({ ...this.state,\n          error: true\n        }) : this.setState({ ...this.state,\n          error: false\n        });\n        const dailyData = data.list.filter(reading => reading.dt_txt.includes(\"12:00:00\"));\n        this.setState({\n          days: dailyData\n        });\n      });\n    };\n\n    this.formatCards = () => {\n      return this.state.days.map((day, index) => /*#__PURE__*/_jsxDEV(Card, {\n        day: day\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 48\n      }, this));\n    };\n\n    this.inputstate = e => {\n      let weatherURL = `https://api.openweathermap.org/data/2.5/forecast?q=${e.target.value}&lang=en&units=metric&APPID=79cce12f32339641751ec2b2c1ccfc2f`;\n      this.setState({ ...this.state,\n        city: e.target.value,\n        weatherURL: weatherURL\n      });\n      this.componentDidMount(weatherURL);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"display-4 jumbotron\",\n        children: \"Weather forecast for 5 days\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: !this.state.error ? this.state.city : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onInput: this.inputstate,\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), !this.state.error ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row justify-content-center\",\n          children: this.formatCards()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"No \", this.state.city, \" city\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default WeekContainer;","map":{"version":3,"names":["React","Card","logDOM","WeekContainer","Component","state","days","city","weatherURL","error","componentDidMount","i","fetch","then","res","json","data","cod","setState","dailyData","list","filter","reading","dt_txt","includes","formatCards","map","day","index","inputstate","e","target","value","render"],"sources":["C:/Users/Tony/Documents/GitHub/react_weather/my-app/src/components/WeekContainer/WeekContainer.js"],"sourcesContent":["import React from 'react';\nimport Card from '../Card/Card';\nimport {logDOM} from \"@testing-library/react\";\n\nclass WeekContainer extends React.Component {\n  state = {\n    days: [],\n    city: \"Klagenfurt\",\n    weatherURL: `https://api.openweathermap.org/data/2.5/forecast?q=Klagenfurt&lang=en&units=metric&APPID=79cce12f32339641751ec2b2c1ccfc2f`,\n    error: false,\n  }\n\n\n  componentDidMount = (i) => {\n    fetch(i ? i : this.state.weatherURL)\n    .then(res => res.json())\n\n    .then(data => {\n      data.cod === \"404\" ? this.setState({...this.state,error:true}) : this.setState({...this.state,error:false})\n      const dailyData = data.list.filter(reading => reading.dt_txt.includes(\"12:00:00\"))\n      this.setState({days: dailyData})\n\n    })\n  }\n\n  formatCards = () => {\n\n    return this.state.days.map((day, index) => <Card day={day} key={index}/>)\n  }\n  inputstate = (e) => {\n    let weatherURL  = `https://api.openweathermap.org/data/2.5/forecast?q=${e.target.value}&lang=en&units=metric&APPID=79cce12f32339641751ec2b2c1ccfc2f`\n\n    this.setState({...this.state,city: e.target.value,\n      weatherURL: weatherURL\n    })\n\n    this.componentDidMount(weatherURL)\n\n\n\n  }\n\n  render() {\n    return (\n      <div className=\"\">\n        <h1 className=\"display-4 jumbotron\">Weather forecast for 5 days</h1>\n        <h1>{!this.state.error ? this.state.city : null}</h1>\n        <input onInput={this.inputstate} type=\"text\"/>\n        {!this.state.error ?  <>\n          <div className=\"row justify-content-center\">\n\n            {this.formatCards()}\n\n          </div></> : <span>No {this.state.city} city</span>}\n      </div>\n    )\n  }\n}\n\nexport default WeekContainer\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,SAAQC,MAAR,QAAqB,wBAArB;;;;AAEA,MAAMC,aAAN,SAA4BH,KAAK,CAACI,SAAlC,CAA4C;EAAA;IAAA;IAAA,KAC1CC,KAD0C,GAClC;MACNC,IAAI,EAAE,EADA;MAENC,IAAI,EAAE,YAFA;MAGNC,UAAU,EAAG,2HAHP;MAINC,KAAK,EAAE;IAJD,CADkC;;IAAA,KAS1CC,iBAT0C,GASrBC,CAAD,IAAO;MACzBC,KAAK,CAACD,CAAC,GAAGA,CAAH,GAAO,KAAKN,KAAL,CAAWG,UAApB,CAAL,CACCK,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAGCF,IAHD,CAGMG,IAAI,IAAI;QACZA,IAAI,CAACC,GAAL,KAAa,KAAb,GAAqB,KAAKC,QAAL,CAAc,EAAC,GAAG,KAAKb,KAAT;UAAeI,KAAK,EAAC;QAArB,CAAd,CAArB,GAAiE,KAAKS,QAAL,CAAc,EAAC,GAAG,KAAKb,KAAT;UAAeI,KAAK,EAAC;QAArB,CAAd,CAAjE;QACA,MAAMU,SAAS,GAAGH,IAAI,CAACI,IAAL,CAAUC,MAAV,CAAiBC,OAAO,IAAIA,OAAO,CAACC,MAAR,CAAeC,QAAf,CAAwB,UAAxB,CAA5B,CAAlB;QACA,KAAKN,QAAL,CAAc;UAACZ,IAAI,EAAEa;QAAP,CAAd;MAED,CARD;IASD,CAnByC;;IAAA,KAqB1CM,WArB0C,GAqB5B,MAAM;MAElB,OAAO,KAAKpB,KAAL,CAAWC,IAAX,CAAgBoB,GAAhB,CAAoB,CAACC,GAAD,EAAMC,KAAN,kBAAgB,QAAC,IAAD;QAAM,GAAG,EAAED;MAAX,GAAqBC,KAArB;QAAA;QAAA;QAAA;MAAA,QAApC,CAAP;IACD,CAxByC;;IAAA,KAyB1CC,UAzB0C,GAyB5BC,CAAD,IAAO;MAClB,IAAItB,UAAU,GAAK,sDAAqDsB,CAAC,CAACC,MAAF,CAASC,KAAM,8DAAvF;MAEA,KAAKd,QAAL,CAAc,EAAC,GAAG,KAAKb,KAAT;QAAeE,IAAI,EAAEuB,CAAC,CAACC,MAAF,CAASC,KAA9B;QACZxB,UAAU,EAAEA;MADA,CAAd;MAIA,KAAKE,iBAAL,CAAuBF,UAAvB;IAID,CApCyC;EAAA;;EAsC1CyB,MAAM,GAAG;IACP,oBACE;MAAK,SAAS,EAAC,EAAf;MAAA,wBACE;QAAI,SAAS,EAAC,qBAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,UAAK,CAAC,KAAK5B,KAAL,CAAWI,KAAZ,GAAoB,KAAKJ,KAAL,CAAWE,IAA/B,GAAsC;MAA3C;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAO,OAAO,EAAE,KAAKsB,UAArB;QAAiC,IAAI,EAAC;MAAtC;QAAA;QAAA;QAAA;MAAA,QAHF,EAIG,CAAC,KAAKxB,KAAL,CAAWI,KAAZ,gBAAqB;QAAA,uBACpB;UAAK,SAAS,EAAC,4BAAf;UAAA,UAEG,KAAKgB,WAAL;QAFH;UAAA;UAAA;UAAA;QAAA;MADoB,iBAArB,gBAKa;QAAA,kBAAU,KAAKpB,KAAL,CAAWE,IAArB;MAAA;QAAA;QAAA;QAAA;MAAA,QAThB;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAaD;;AApDyC;;AAuD5C,eAAeJ,aAAf"},"metadata":{},"sourceType":"module"}