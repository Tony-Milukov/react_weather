{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tony\\\\Documents\\\\GitHub\\\\react_weather\\\\my-app\\\\src\\\\components\\\\WeekContainer\\\\WeekContainer.js\";\nimport React from 'react';\nimport Card from '../Card/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass WeekContainer extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      days: [],\n      city: \"Kiev\",\n      weatherURL: `https://api.openweathermap.org/data/2.5/forecast?q=Kiev&lang=en&units=metric&APPID=79cce12f32339641751ec2b2c1ccfc2f`\n    };\n\n    this.componentDidMount = () => {\n      fetch(weatherURL).then(res => res.json()).then(data => {\n        const dailyData = data.list.filter(reading => reading.dt_txt.includes(\"12:00:00\"));\n        this.setState({\n          days: dailyData\n        });\n      });\n    };\n\n    this.formatCards = () => {\n      return this.state.days.map((day, index) => /*#__PURE__*/_jsxDEV(Card, {\n        day: day\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 48\n      }, this));\n    };\n\n    this.inputstate = e => {\n      this.setState({ ...this.state,\n        city: e.target.value\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.state.city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"display-4 jumbotron\",\n        children: \"Weather forecast for 5 days\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onInput: this.inputstate,\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-center\",\n        children: this.formatCards()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default WeekContainer;","map":{"version":3,"names":["React","Card","WeekContainer","Component","state","days","city","weatherURL","componentDidMount","fetch","then","res","json","data","dailyData","list","filter","reading","dt_txt","includes","setState","formatCards","map","day","index","inputstate","e","target","value","render"],"sources":["C:/Users/Tony/Documents/GitHub/react_weather/my-app/src/components/WeekContainer/WeekContainer.js"],"sourcesContent":["import React from 'react';\nimport Card from '../Card/Card';\n\n\n\nclass WeekContainer extends React.Component {\n\n  state = {\n    days: [],\n    city: \"Kiev\",\n    weatherURL: `https://api.openweathermap.org/data/2.5/forecast?q=Kiev&lang=en&units=metric&APPID=79cce12f32339641751ec2b2c1ccfc2f`,\n  }\n\n  componentDidMount = () => {\n    fetch(weatherURL)\n    .then(res => res.json())\n\n    .then(data => {\n      const dailyData = data.list.filter(reading => reading.dt_txt.includes(\"12:00:00\"))\n      this.setState({days: dailyData})\n    })\n  }\n\n  formatCards = () => {\n\n    return this.state.days.map((day, index) => <Card day={day} key={index}/>)\n  }\n  inputstate = (e) => {\n    this.setState({...this.state,city: e.target.value})\n  }\n\n  render() {\n    return (\n      <div className=\"\">\n        <h1>{this.state.city}</h1>\n      <h1 className=\"display-4 jumbotron\">Weather forecast for 5 days</h1>\n        <input onInput={this.inputstate} type=\"text\"/>\n        <div className=\"row justify-content-center\">\n\n          {this.formatCards()}\n\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default WeekContainer\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,cAAjB;;;AAIA,MAAMC,aAAN,SAA4BF,KAAK,CAACG,SAAlC,CAA4C;EAAA;IAAA;IAAA,KAE1CC,KAF0C,GAElC;MACNC,IAAI,EAAE,EADA;MAENC,IAAI,EAAE,MAFA;MAGNC,UAAU,EAAG;IAHP,CAFkC;;IAAA,KAQ1CC,iBAR0C,GAQtB,MAAM;MACxBC,KAAK,CAACF,UAAD,CAAL,CACCG,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAGCF,IAHD,CAGMG,IAAI,IAAI;QACZ,MAAMC,SAAS,GAAGD,IAAI,CAACE,IAAL,CAAUC,MAAV,CAAiBC,OAAO,IAAIA,OAAO,CAACC,MAAR,CAAeC,QAAf,CAAwB,UAAxB,CAA5B,CAAlB;QACA,KAAKC,QAAL,CAAc;UAACf,IAAI,EAAES;QAAP,CAAd;MACD,CAND;IAOD,CAhByC;;IAAA,KAkB1CO,WAlB0C,GAkB5B,MAAM;MAElB,OAAO,KAAKjB,KAAL,CAAWC,IAAX,CAAgBiB,GAAhB,CAAoB,CAACC,GAAD,EAAMC,KAAN,kBAAgB,QAAC,IAAD;QAAM,GAAG,EAAED;MAAX,GAAqBC,KAArB;QAAA;QAAA;QAAA;MAAA,QAApC,CAAP;IACD,CArByC;;IAAA,KAsB1CC,UAtB0C,GAsB5BC,CAAD,IAAO;MAClB,KAAKN,QAAL,CAAc,EAAC,GAAG,KAAKhB,KAAT;QAAeE,IAAI,EAAEoB,CAAC,CAACC,MAAF,CAASC;MAA9B,CAAd;IACD,CAxByC;EAAA;;EA0B1CC,MAAM,GAAG;IACP,oBACE;MAAK,SAAS,EAAC,EAAf;MAAA,wBACE;QAAA,UAAK,KAAKzB,KAAL,CAAWE;MAAhB;QAAA;QAAA;QAAA;MAAA,QADF,eAEA;QAAI,SAAS,EAAC,qBAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFA,eAGE;QAAO,OAAO,EAAE,KAAKmB,UAArB;QAAiC,IAAI,EAAC;MAAtC;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE;QAAK,SAAS,EAAC,4BAAf;QAAA,UAEG,KAAKJ,WAAL;MAFH;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAYD;;AAvCyC;;AA0C5C,eAAenB,aAAf"},"metadata":{},"sourceType":"module"}